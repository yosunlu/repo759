import pandas as pd
import matplotlib.pyplot as plt
import ast  # To safely evaluate the string representation of the lists
import numpy as np

def read_positions_from_csv(filename):
    """Read particle positions from CSV with the format: step,[[x1,y1,z1], [x2,y2,z2],...]"""
    data = []
    
    # Read the CSV file
    with open(filename, 'r') as file:
        for line in file:
            step_str, positions_str = line.strip().split(',', 1)
            step = int(step_str)  # Parse the step number
            positions = ast.literal_eval(positions_str)  # Convert string list to actual list
            
            # Store positions for each step
            data.append(positions)
    
    return data

def main():
    # Filepath to the CSV file generated by C++ code
    filename = 'positions.csv'
    board_size = 4
    
    # Read particle positions from the CSV
    data = read_positions_from_csv(filename)
    
    # Plot particle positions for each timestep.
    pos_save = np.zeros((len(data[0]), 3, len(data) + 1))
    pos_save[:, :, 0] = data[0]
    
    # prep figure
    fig = plt.figure(figsize=(8, 10), dpi=80)
    grid = plt.GridSpec(3, 1, wspace=0.0, hspace=0.3)
    ax1 = plt.subplot(grid[0:3, 0])
    
    for i in range(len(data)):
        pos = np.array(data[i])
        pos_save[:, :, i + 1] = pos

        plt.sca(ax1)
        plt.cla()
        xx = pos_save[:, 0, max(i - 50, 0) : i + 1]
        yy = pos_save[:, 1, max(i - 50, 0) : i + 1]
        plt.scatter(xx, yy, s=1, color=[0.7, 0.7, 1])
        plt.scatter(pos[:, 0], pos[:, 1], s=10, color="blue")
        ax1.set(xlim=(-board_size, board_size), ylim=(-board_size, board_size))
        ax1.set_aspect("equal", "box")
        ax1.set_xticks(range(-board_size, board_size + 1))
        ax1.set_yticks(range(-board_size, board_size + 1))

        plt.pause(0.001)
    
    plt.savefig("nbody-cpp.png", dpi=240)
    plt.show()
        
if __name__ == "__main__":
    main()
